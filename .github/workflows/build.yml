name: Build UN1CA Rom

on:
  workflow_dispatch:
    inputs:
      DEVICE_CODENAME:
        description: 'Enter your Device Code Name Like (a23)'
        required: true

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Send Start Notification
        run: |
          ACTION_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST https://api.telegram.org/5477489617:AAHFxTxuvPGgGM_QmoWtIYBPouv-OnTHL64/sendMessage \
            -d chat_id="-1001538361307" \
            -d text="üì¶ Build started for target: ${{ github.event.inputs.DEVICE_CODENAME }}. [View Actions]($ACTION_URL)" \
            -d parse_mode="Markdown"

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Free disk space
        uses: rokibhasansagar/slimhub_actions@main
        with:
          retain: 'compiler_cmake'

      - name: Set up build environment
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            attr ccache clang ffmpeg golang \
            libbrotli-dev libgtest-dev libprotobuf-dev libunwind-dev libpcre2-dev \
            libzstd-dev linux-modules-extra-$(uname -r) lld protobuf-compiler webp \
            zipalign
          sudo modprobe erofs f2fs f2fs-tools
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          echo -n "${{ secrets.PLATFORM_KEY_PK8 }}" | base64 --decode > unica/security/unica_platform.pk8
          echo -n "${{ secrets.PLATFORM_KEY_PEM }}" | base64 --decode > unica/security/unica_platform.x509.pem

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Build dependencies
        run: source ./buildenv.sh ${{ github.event.inputs.DEVICE_CODENAME }}

      - name: Download stock firmwares
        run: |
          source ./buildenv.sh ${{ github.event.inputs.DEVICE_CODENAME }}
          ./scripts/download_fw.sh

      - name: Extract stock firmwares
        run: |
          source ./buildenv.sh ${{ github.event.inputs.DEVICE_CODENAME }}
          ./scripts/extract_fw.sh
          ./scripts/cleanup.sh odin

      - name: Build ROM
        run: |
          source ./buildenv.sh ${{ github.event.inputs.DEVICE_CODENAME }}
          ./scripts/make_rom.sh

      - name: Upload ROM to Gofile.io
        id: upload_rom
        run: |
          DOWNLOAD_LINK=$(./scripts/upload.sh /home/runner/work/UN1CA/UN1CA/out/*.zip)
          echo "DOWNLOAD_LINK=$DOWNLOAD_LINK" >> $GITHUB_ENV

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: build-artifact
          path: |
            /home/runner/work/UN1CA/UN1CA/out/*.zip

      - name: Send Success Notification
        if: success()
        run: |
          ACTION_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST https://api.telegram.org/botYOURTOKEN/sendMessage \
            -d chat_id="-1001538361307" \
            -d text="‚úÖ Build finished successfully for target: ${{ github.event.inputs.DEVICE_CODENAME }}. [Download ROM](${DOWNLOAD_LINK}) [View Actions]($ACTION_URL)" \
            -d parse_mode="Markdown"

      - name: Send Failure Notification
        if: failure()
        run: |
          ACTION_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST https://api.telegram.org/botYOURTOKEN/sendMessage \
            -d chat_id="-1001538361307" \
            -d text="‚ùå Build failed for target: ${{ github.event.inputs.DEVICE_CODENAME }}. [View Actions]($ACTION_URL)" \
            -d parse_mode="Markdown"
