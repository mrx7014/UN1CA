name: Build UN1CA Rom For Samsung Galaxy A23 5G

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "fourteen"

jobs:
  build:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        target: [a23xq]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          submodules: "recursive"

      - name: GitHub Workflow Cleaner Action
        uses: rokibhasansagar/slimhub_actions@main
        with:
          retain: "compiler_cmake"

      - name: Set up build environment
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            attr ccache clang ffmpeg golang \
            libbrotli-dev libgtest-dev libprotobuf-dev libunwind-dev libpcre2-dev \
            libzstd-dev linux-modules-extra-$(uname -r) lld protobuf-compiler webp \
            zipalign f2fs-tools bc
          sudo modprobe erofs f2fs
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          echo -n "${{ secrets.PLATFORM_KEY_PK8 }}" | base64 --decode > unica/security/unica_platform.pk8
          echo -n "${{ secrets.PLATFORM_KEY_PEM }}" | base64 --decode > unica/security/unica_platform.x509.pem

      - name: Setup Java JDK
        uses: actions/setup-java@v4.6.0
        with:
          distribution: "temurin"
          java-version: "11"
          cache: "gradle"

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.1.0
        with:
          node-version: "22"

      - name: Build dependencies
        run: source ./buildenv.sh ${{ matrix.target }}

      - name: Download stock firmwares
        run: |
          source ./buildenv.sh ${{ matrix.target }}
          ./scripts/download_fw.sh

      - name: Extract stock firmwares
        run: |
          source ./buildenv.sh ${{ matrix.target }}
          ./scripts/extract_fw.sh
          ./scripts/cleanup.sh odin

      - name: Build ROM
        run: |
          source ./buildenv.sh ${{ matrix.target }}
          ./scripts/make_rom.sh

      - name: Check for ZIP file existence
        run: |
          ls;cd out;ls || true

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: build-artifact
          path: |
            /home/runner/work/UN1CA/UN1CA/out/*.tar*

      - name: Start Border0 in case of failure.
        if: failure()
        uses: borderzero/gh-action@v2
        with:
          token: ${{ secrets.BORDER0_ADMIN_TOKEN }}
          wait-for: 60
